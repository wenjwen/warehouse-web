<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.warehouse.mapper.StocktakeItemMapper" >
  <resultMap id="BaseResultMap" type="com.warehouse.model.StocktakeItem" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="stocktake_id" property="stocktakeId" jdbcType="INTEGER" />
    <result column="material_id" property="materialId" jdbcType="INTEGER" />
    <result column="unit_id" property="unitId" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="FLOAT" />
    <result column="balance" property="balance" jdbcType="FLOAT" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="differ_quantity" property="differQuantity" jdbcType="FLOAT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="com.warehouse.model.StocktakeItem" >
    insert into stocktake_item (id, stocktake_id, material_id, 
      unit_id, quantity, balance, result, 
      differ_quantity, remark, update_user, 
      create_user, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{stocktakeId,jdbcType=INTEGER}, #{materialId,jdbcType=INTEGER}, 
      #{unitId,jdbcType=INTEGER}, #{quantity,jdbcType=FLOAT}, #{balance,jdbcType=FLOAT}, #{result,jdbcType=VARCHAR}, 
      #{differQuantity,jdbcType=FLOAT}, #{remark,jdbcType=VARCHAR}, #{updateUser,jdbcType=INTEGER}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.warehouse.model.StocktakeItem" >
    insert into stocktake_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stocktakeId != null" >
        stocktake_id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="balance != null" >
        balance ,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="differQuantity != null" >
        differ_quantity,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stocktakeId != null" >
        #{stocktakeId,jdbcType=INTEGER},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=FLOAT},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=FLOAT},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="differQuantity != null" >
        #{differQuantity,jdbcType=FLOAT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <delete id="deleteByStocktakeId" parameterType="java.lang.Integer">
  	delete from stocktake_item where stocktake_id = #{id}
  </delete>
  
  <insert id="batchInsert" parameterType="java.util.List">
  	insert into stocktake_item (id, stocktake_id, material_id, unit_id, balance, create_time, update_time)
    values 
    <foreach collection="list" item="item" index="index" separator="," >  
    	(#{item.id,jdbcType=INTEGER}, #{item.stocktakeId,jdbcType=INTEGER}, #{item.materialId,jdbcType=INTEGER}, 
       #{item.unitId,jdbcType=INTEGER}, #{item.balance,jdbcType=FLOAT}, #{item.createTime,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=VARCHAR}
      )
    </foreach>  
  </insert>
</mapper>