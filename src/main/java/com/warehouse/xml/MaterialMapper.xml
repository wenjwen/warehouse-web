<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.warehouse.mapper.MaterialMapper" >
  <resultMap id="BaseResultMap" type="com.warehouse.model.Material" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="unit_id" property="unitId" jdbcType="INTEGER" />
    <result column="unit_name" property="unitName" jdbcType="VARCHAR" />
    <result column="total_quantity" property="totalQuantity" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="last_stock_take" property="lastStockTake" jdbcType="VARCHAR" />
    <result column="avg_unit_price" property="avgUnitPrice" jdbcType="DECIMAL" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="shelf" property="shelf" jdbcType="VARCHAR" />
    <result column="category_id" property="categoryId" jdbcType="INTEGER" />
    <result column="disabled" property="disabled" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="EntryMap" type="com.warehouse.util.Entry" >
  	 <result column="id" property="id" jdbcType="INTEGER" />
     <result column="name" property="name" jdbcType="VARCHAR" />
  	 <result column="unit_id" property="extraValue1" jdbcType="INTEGER" />
	   <result column="unit_name" property="extraValue2" jdbcType="VARCHAR" />
	   <result column="balance" property="extraValue3" jdbcType="DECIMAL" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, update_user, create_user, create_time, update_time, unit_id, total_quantity, 
    balance, size, last_stock_take, avg_unit_price, unit_price, name, code, shelf, category_id, 
    disabled
  </sql>
  
  <sql id="Example_Where_Clause" >
    <trim prefix="WHERE" prefixOverrides=",|AND|OR">
    		<if test="id != null" >
     	  	 AND ID = #{id}
    	  </if>
    		<if test="code != null and code != ''" >
     	  	 AND CODE = #{code}
    	  </if>
    		<if test="name != null and name != ''" >
     	  	 AND NAME like '%${name}%'
    	  </if>
    		<if test="size != null and size != ''" >
     	  	 AND SIZE = #{size}
    	  </if>
    		<if test="categoryId != null" >
     	  	 AND CATEGORY_ID = #{categoryId}
    	  </if>
    		<if test="disabled != null">
     	  	 AND DISABLED = #{disabled}
    	  </if>
    </trim>
   </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from material
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from material
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.warehouse.model.Material" >
    insert into material (id, update_user, create_user, 
      create_time, update_time, unit_id, 
      total_quantity, balance, size, 
      last_stock_take, avg_unit_price, unit_price, 
      name, code, shelf, 
      category_id, disabled)
    values (#{id,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, 
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{unitId,jdbcType=INTEGER}, 
      #{totalQuantity,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, #{size,jdbcType=VARCHAR}, 
      #{lastStockTake,jdbcType=VARCHAR}, #{avgUnitPrice,jdbcType=DECIMAL}, #{unitPrice,jdbcType=DECIMAL}, 
      #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{shelf,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER}, #{disabled,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.warehouse.model.Material" >
    insert into material
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
      <if test="totalQuantity != null" >
        total_quantity,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="lastStockTake != null" >
        last_stock_take,
      </if>
      <if test="avgUnitPrice != null" >
        avg_unit_price,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="shelf != null" >
        shelf,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="disabled != null" >
        disabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="totalQuantity != null" >
        #{totalQuantity,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="lastStockTake != null" >
        #{lastStockTake,jdbcType=VARCHAR},
      </if>
      <if test="avgUnitPrice != null" >
        #{avgUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="shelf != null" >
        #{shelf,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="disabled != null" >
        #{disabled,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.warehouse.model.Material" >
    update material
    <set >
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="totalQuantity != null" >
        total_quantity = #{totalQuantity,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="lastStockTake != null" >
        last_stock_take = #{lastStockTake,jdbcType=VARCHAR},
      </if>
      <if test="avgUnitPrice != null" >
        avg_unit_price = #{avgUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="shelf != null" >
        shelf = #{shelf,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="disabled != null" >
        disabled = #{disabled,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.warehouse.model.Material" >
    update material
    set update_user = #{updateUser,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=INTEGER},
      total_quantity = #{totalQuantity,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      size = #{size,jdbcType=VARCHAR},
      last_stock_take = #{lastStockTake,jdbcType=VARCHAR},
      avg_unit_price = #{avgUnitPrice,jdbcType=DECIMAL},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      shelf = #{shelf,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      disabled = #{disabled,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findAllEntry" resultMap="EntryMap">
  	select m.id, m.name, m.balance, m.unit_id, d.name as unit_name 
  	from material m left join dict d on(m.unit_id = d.id)
  </select>
  
  <select id="findAll" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from material
  </select>
  
  <select id="findSelective" parameterType="com.warehouse.model.Material" resultMap="BaseResultMap">
  	select m.*, d.name as unit_name 
    from material m left join dict d on(m.unit_id = d.id) 
    <where>
    	<if test="id != null" >
     	  	 AND m.ID = #{id}
    	  </if>
    		<if test="code != null and code != ''" >
     	  	 AND m.CODE = #{code}
    	  </if>
    		<if test="name != null and name != ''" >
     	  	 AND m.NAME like '%${name}%'
    	  </if>
    		<if test="size != null and size != ''" >
     	  	 AND m.SIZE = #{size}
    	  </if>
    		<if test="categoryId != null" >
     	  	 AND m.CATEGORY_ID = #{categoryId}
    	  </if>
    		<if test="disabled != null">
     	  	 AND m.DISABLED = #{disabled}
    	  </if>
    </where>
  </select>
  
  <select id="selectBalanceByIds" parameterType="java.util.List" resultMap="BaseResultMap">
      select id, total_quantity, balance, unit_id, avg_unit_price from material where id in 
         <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
           #{item.materialId}
         </foreach>
  </select>
  
  <update id="updateForStocktake">
  	update material set 
  		balance=#{quantity,jdbcType=DECIMAL}, 
  		last_stock_take=#{createTime,jdbcType=VARCHAR}
  	where id = #{materialId}
  </update>
  
</mapper>