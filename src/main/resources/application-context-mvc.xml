<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"
		xmlns:cache="http://www.springframework.org/schema/cache"
		xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/cache
          	http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
       
    <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		p:location="classpath:config.properties" />
    
    <!-- spring mvc -->
    
    <context:component-scan base-package="com.warehouse.*" />
    
    <mvc:annotation-driven />
	
	<!-- spring view -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<!-- <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /> -->
	    <property name="prefix" value="/WEB-INF/jsp" />
	    <property name="suffix" value=".jsp" />
    </bean>
	
    <!-- spring i18n -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    </mvc:interceptors>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	
	<!--配置拦截器, 多个拦截器,顺序执行 -->  
	<!-- <mvc:interceptors>    
	    <mvc:interceptor>    
	        匹配的是url路径， 如果不配置或/**,将拦截所有的Controller  
	        <mvc:mapping path="/**" />
	        <mvc:exclude-mapping path="/resource/**"/>  
	        <bean class="com.createw.boxcard.interceptor.CommonInterceptor">
	        	<property name="excludeUrls">
					<list>
						<value></value>
						<value>validformLogin</value>
						<value>overtime</value>
					</list>
				</property>
	        </bean>    
	    </mvc:interceptor>   
	    当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  
	</mvc:interceptors> -->
    
  <!-- 获取bean静态方法对象 -->
	<bean class="com.warehouse.common.AppContextUtil"></bean>
	<!-- 设置全局常量 -->
	<bean class="com.warehouse.common.InitGlobalProperty"></bean>
	
    <!-- 
    <aop:aspectj-autoproxy />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" >
		<property name="interceptors">
			<bean class="com.createw.boxcard.common.AddGlobalObjectsToModelInterceptor" />
		</property>	
	</bean>
	
	-->
	
	<aop:aspectj-autoproxy />  
	<aop:aspectj-autoproxy proxy-target-class="true" />  
    <!-- <bean id="logAspect" class="com.createw.boxcard.aop.LogAspect" />   -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<mvc:resources mapping="/resource/**" location="/resource/"/>
	
</beans>
